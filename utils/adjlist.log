This is METAFONT, Version 2.718281 (TeX Live 2012) (base=mf 2012.6.30)  2 JUN 2013 23:07
**adjlist.js graph.js
(adjlist.js
! A primary expression can't begin with `*'.
<inserted text> 
                0
<to be read again> 
                   *
l.3  *
       File  : graph.js
? ls
Type <return> to proceed, S to scroll future error messages,
R to run without stopping, Q to run quietly,
I to insert something, E to edit your file,
1 or ... or 9 to ignore the next 1 to 9 tokens of input,
H for help, X to quit.
? q
OK, entering batchmode...
>> 0
! Isolated expression.
<to be read again> 
                   :
l.3  * File  :
               graph.js
I couldn't find an `=' or `:=' after the
expression that is shown above this error message,
so I guess I'll just ignore it and carry on.

! Extra tokens will be flushed.
<to be read again> 
                   :
l.3  * File  :
               graph.js
I've just read as much of that statement as I could fathom,
so a semicolon should have been next. It's very puzzling...
but I'll try to get myself back together, by ignoring
everything up to the next `;'. Please insert a semicolon
now in front of anything that you don't want me to delete.
(See Chapter 27 of The METAFONTbook for an example.)

! Extra tokens will be flushed.
<to be read again> 
                   (
l.17   var oReq = new XMLHttpRequest(
                                     );
I've just read as much of that statement as I could fathom,
so a semicolon should have been next. It's very puzzling...
but I'll try to get myself back together, by ignoring
everything up to the next `;'. Please insert a semicolon
now in front of anything that you don't want me to delete.
(See Chapter 27 of The METAFONTbook for an example.)

>> oReq.open
! Isolated expression.
<to be read again> 
                   (
l.18   oReq.open(
                 "GET", "/myfile.png", true);
I couldn't find an `=' or `:=' after the
expression that is shown above this error message,
so I guess I'll just ignore it and carry on.

! Extra tokens will be flushed.
<to be read again> 
                   (
l.18   oReq.open(
                 "GET", "/myfile.png", true);
I've just read as much of that statement as I could fathom,
so a semicolon should have been next. It's very puzzling...
but I'll try to get myself back together, by ignoring
everything up to the next `;'. Please insert a semicolon
now in front of anything that you don't want me to delete.
(See Chapter 27 of The METAFONTbook for an example.)

>> oReq.responseType
>> "arraybuffer"
! Equation cannot be performed (numeric=string).
<to be read again> 
                   ;
l.19   oReq.responseType = "arraybuffer";
                                         
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

! Extra tokens will be flushed.
<to be read again> 
                   (
l.21   oReq.onload = function (
                               oEvent) {
I've just read as much of that statement as I could fathom,
so a semicolon should have been next. It's very puzzling...
but I'll try to get myself back together, by ignoring
everything up to the next `;'. Please insert a semicolon
now in front of anything that you don't want me to delete.
(See Chapter 27 of The METAFONTbook for an example.)

>> //Note
! Isolated expression.
<to be read again> 
                   :
l.22     var arrayBuffer = oReq.response; // Note:
                                                   not oReq.responseText
I couldn't find an `=' or `:=' after the
expression that is shown above this error message,
so I guess I'll just ignore it and carry on.

! Extra tokens will be flushed.
<to be read again> 
                   :
l.22     var arrayBuffer = oReq.response; // Note:
                                                   not oReq.responseText
I've just read as much of that statement as I could fathom,
so a semicolon should have been next. It's very puzzling...
but I'll try to get myself back together, by ignoring
everything up to the next `;'. Please insert a semicolon
now in front of anything that you don't want me to delete.
(See Chapter 27 of The METAFONTbook for an example.)

! Missing `=' has been inserted.
<to be read again> 
                   var
l.25       for (var
                    i = 0; i < byteArray.byteLength; i++) {
The next thing in this loop should have been `=' or `:='.
But don't worry; I'll pretend that an equals sign
was present, and I'll look for the values next.

>> var.i
! Unknown relation will be considered false.
<to be read again> 
                   ;
l.25       for (var i = 0;
                           i < byteArray.byteLength; i++) {
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

! Missing `:' has been inserted.
<to be read again> 
                   ;
l.25       for (var i = 0;
                           i < byteArray.byteLength; i++) {
The next thing in this loop should have been a `:'.
So I'll pretend that a colon was present;
everything from here to `endfor' will be iterated.

)
Runaway loop?
;i<byteArray.byteLength;i++){//do.something.with.each.byte.in.the.array ETC.
! File ended while scanning the text of a for loop.
<inserted text> 
                endfor
<*> adjlist.js
               graph.js
I suspect you have forgotten an `endfor',
causing me to read past where you wanted me to stop.
I'll try to recover; but if the error is serious,
you'd better type `E' or `X' now and fix your file.

>> -byteArray.byteLength+i
! Unknown relation will be considered false.
<to be read again> 
                   ;
<for(false)> ;i<byteArray.byteLength;
                                     i++){//do.something.with.each.byte.in.t...
<inserted text> endfor
                      
<*> adjlist.js
               graph.js
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> false
! Isolated expression.
<to be read again> 
                   ;
<for(false)> ;i<byteArray.byteLength;
                                     i++){//do.something.with.each.byte.in.t...
<inserted text> endfor
                      
<*> adjlist.js
               graph.js
I couldn't find an `=' or `:=' after the
expression that is shown above this error message,
so I guess I'll just ignore it and carry on.

! A secondary expression can't begin with `right delimiter that matches ('.
<inserted text> 
                0
<to be read again> 
                   )
<for(false)> ;i<byteArray.byteLength;i++)
                                         {//do.something.with.each.byte.in.t...
<inserted text> endfor
                      
<*> adjlist.js
               graph.js
I'm afraid I need some sort of value in order to continue,
so I've tentatively inserted `0'. You may want to
delete this zero and insert something else;
see Chapter 27 of The METAFONTbook for an example.

>> i
>> 0
! Not implemented: (unknown numeric)++(known numeric).
<to be read again> 
                   )
<for(false)> ;i<byteArray.byteLength;i++)
                                         {//do.something.with.each.byte.in.t...
<inserted text> endfor
                      
<*> adjlist.js
               graph.js
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> 0
! Isolated expression.
<to be read again> 
                   )
<for(false)> ;i<byteArray.byteLength;i++)
                                         {//do.something.with.each.byte.in.t...
<inserted text> endfor
                      
<*> adjlist.js
               graph.js
I couldn't find an `=' or `:=' after the
expression that is shown above this error message,
so I guess I'll just ignore it and carry on.

! Extra tokens will be flushed.
<to be read again> 
                   )
<for(false)> ;i<byteArray.byteLength;i++)
                                         {//do.something.with.each.byte.in.t...
<inserted text> endfor
                      
<*> adjlist.js
               graph.js
I've just read as much of that statement as I could fathom,
so a semicolon should have been next. It's very puzzling...
but I'll try to get myself back together, by ignoring
everything up to the next `;'. Please insert a semicolon
now in front of anything that you don't want me to delete.
(See Chapter 27 of The METAFONTbook for an example.)

>> oReq.send
! Isolated expression.
<to be read again> 
                   (false)
<for(false)> ...in.the.array} } };oReq.send(EXPR0)
                                                  null);} ENDFOR
<inserted text> endfor
                      
<*> adjlist.js
               graph.js
I couldn't find an `=' or `:=' after the
expression that is shown above this error message,
so I guess I'll just ignore it and carry on.

! Extra tokens will be flushed.
<to be read again> 
                   (false)
<for(false)> ...in.the.array} } };oReq.send(EXPR0)
                                                  null);} ENDFOR
<inserted text> endfor
                      
<*> adjlist.js
               graph.js
I've just read as much of that statement as I could fathom,
so a semicolon should have been next. It's very puzzling...
but I'll try to get myself back together, by ignoring
everything up to the next `;'. Please insert a semicolon
now in front of anything that you don't want me to delete.
(See Chapter 27 of The METAFONTbook for an example.)

! A statement can't begin with `}'.
<to be read again> 
                   }
<for(false)> ...array} } };oReq.send(EXPR0)null);}
                                                   ENDFOR
<inserted text> endfor
                      
<*> adjlist.js
               graph.js
I was looking for the beginning of a new statement.
If you just proceed without changing anything, I'll ignore
everything up to the next `;'. Please insert a semicolon
now in front of anything that you don't want me to delete.
(See Chapter 27 of The METAFONTbook for an example.)

! Extra tokens will be flushed.
<to be read again> 
                   }
<for(false)> ...array} } };oReq.send(EXPR0)null);}
                                                   ENDFOR
<inserted text> endfor
                      
<*> adjlist.js
               graph.js
I've just read as much of that statement as I could fathom,
so a semicolon should have been next. It's very puzzling...
but I'll try to get myself back together, by ignoring
everything up to the next `;'. Please insert a semicolon
now in front of anything that you don't want me to delete.
(See Chapter 27 of The METAFONTbook for an example.)

! Forbidden token found while scanning to the end of the statement.
<inserted text> 
                ;
<to be read again> 
                    ENDFOR
<for(false)> ...} };oReq.send(EXPR0)null);} ENDFOR
                                                  
<inserted text> endfor
                      
<*> adjlist.js
               graph.js
A previous error seems to have propagated,
causing me to read past where you wanted me to stop.
I'll try to recover; but if the error is serious,
you'd better type `E' or `X' now and fix your file.

! Emergency stop.
<*> adjlist.js graph.js
                       
*** (job aborted, no legal end found)


